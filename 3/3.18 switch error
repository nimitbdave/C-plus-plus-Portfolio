/* 
This program was intended to have the same effect as the one in 3.17. But with no break
statements, the program execution falls through all the case statements it encounters:
*/

#include <cfloat>
#include <cmath>
#include <iostream>
using namespace std; 

int main()
{ int score;
  
  cout << "Enter your test score: "; cin >> score;
  
  switch (score/10)
  { case 10:
    case 9: cout << "Your grade is an A." << endl; // LOGICAL ERROR
    case 8: cout << "Your grade is a B." << endl; // LOGICAL ERROR
    case 7: cout << "Your grade is a C." << endl; // LOGICAL ERROR
    case 6: cout << "Your grade is a D." << endl; // LOGICAL ERROR
    case 5:
    case 4:
    case 3:
    case 2:
    case 1:
    case 0: cout << "Your grade is an F." << endl; // LOGICAL ERROR
    default: cout << "Error: score is out of range.\n";
  }
  
  cout << "Goodbye." << endl;
}

/*
OUPUT: 
Enter your test score: 83
Your grade is a B.
Your grade is a C.
Your grade is a D.
Your grade is an F.
Error: score is out of range.
Goodbye.

After branching to case 8, and printing “Your grade is a B.”, the program execution goes
right on to case 7 and prints “Your grade is a C.” Since the break statements have been
removed, it keeps falling through, all the way down to the default clause, executing each of the cout
statements along the way.
*/
