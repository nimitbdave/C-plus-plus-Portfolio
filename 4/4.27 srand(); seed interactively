/* 
The line srand(seed) assigns the value of the variable seed to the internal “seed” used by the
rand() function to initialize the sequence of pseudo-random numbers that it generates. Different seeds
produce different results.

This program is the same as the one in 4.26 except that it allows the pseudo-random number
generator’s seed to be set interactively:
*/

#include <cstdlib> // defines the rand() function and RAND_MAX const
#include <cfloat>
#include <iomanip> // defines setw()
#include <cmath> // defines pow() and log()
#include <iostream> // defines cin and cout
using namespace std; 

int main()
{ // prints pseudo-random numbers:
  unsigned seed;
  cout << "Enter seed: ";
  cin >> seed;
  srand(seed);                      // initializes the seed
  for (int i = 0; i < 8; i++)
    cout << rand() << endl;
}

/*
OUPUT: 
Enter seed: 0
12345
1406932606
654583775
1449466924
229283573
1109335178
1051550459
1293799192

Enter seed: 1
1103527590
377401575
662824084
1147902781
2035015474
368800899
1508029952
486256185

Enter seed: 12345
1406932606
654583775
1449466924
229283573
1109335178
1051550459
1293799192
794471793

Note that the seed value 12345 used in the third run of the program is the first number generated by
rand() in the first run. Consequently the first through seventh numbers generated in the third run are the
same as the second through eighth numbers generated in the first run. Also note that the sequence
generated in the second run is the same as the one produced in Example 4.26. This suggests that, on this
computer, the default seed value is 1.

The problem of having to enter a seed value interactively can be overcome by using the computer’s
system clock. The system clock keeps track of the current time in seconds. The
time() function defined in the header file <ctime> returns the current time as an unsigned
integer. This then can be used as the seed for the rand() function.

*/
