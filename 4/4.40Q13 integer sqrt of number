/* 
Write a program to find the integer square root of a given number. That is the largest integer
whose square is less than or equal to the given number.

This program finds the integer square root of a given number. This method uses an “exhaustive” algorithm
to find all the positive integers whose square is less than or equal to the given number:
*/

#include <cstdlib> // defines the rand() function and RAND_MAX const
#include <ctime> // defines the time() function
//#include <time.h> // use this if <ctime> is not recognized
#include <cfloat>
#include <iomanip> // defines setw()
#include <cmath> // defines pow() and log()
#include <iostream> // defines cin and cout
using namespace std; 

int main()
{   float x;
    
    cout << "Enter a positive number: ";
    cin >> x;
    
    int n = 1;
    while (n*n <= x)            // starts with n=1 and continues to increment n until n*n > x. 
        ++n;                    // When the while loop terminates, n is the smallest integer whose square is greater than x,
                                // so n-1 is the integer square root of x.
    cout << "The integer square root of " << x << " is "
         << n-1 << endl;
}

/*
OUPUT: 
Enter a positive number: 1234.56
The integer square root of 1234.56 is 35

It starts with n=1 and continues to increment n until n*n > x. When the while loop terminates, n
is the smallest integer whose square is greater than x, so n-1 is the integer square root of x. 
*/
