/* 
In 5.14, the following expression was used to test whether y is a leap year:
y % 4 == 0 && y % 100 != 0 || y % 400 == 0

This expression is not the most efficient form. If y is not divisible by 4, it will still test the
condition y % 400 == 0 which would have to be false. 

C++ implements “short circuiting,”
which means that subsequent parts of a compound condition are tested only when necessary.
Find an equivalent compound condition that is more efficient due to short circuiting.


The compound condition
y%4 == 0 && (y % 100 != 0 || y % 400 == 0)
is equivalent and more efficient. The two can be seen to be equivalent by checking their values in the
four possibilities, represented by the four y values 1995, 1996, 1900, and 2000. This condition is
more efficient because if y is not divisible by 4 (the most likely case), then it will not test y further.
*/

#include <cctype> // defines the functions isdigit(), islower(), etc.
#include <cstdlib> // rand(), RAND_MAX const, exit()
#include <ctime> // defines the time() function
//#include <time.h> // use this if <ctime> is not recognized
#include <cfloat>
#include <iomanip> // defines setw()
#include <cmath> // defines pow() and log(), fabs(), sqrt()
#include <iostream> // defines cin and cout
using namespace std; 

#include <cctype> // defines the functions isdigit(), islower(), etc.
#include <cstdlib> // defines the rand() function and RAND_MAX const
#include <ctime> // defines the time() function
//#include <time.h> // use this if <ctime> is not recognized
#include <cfloat>
#include <iomanip> // defines setw()
#include <cmath> // defines pow() and log(), fabs(), sqrt()
#include <iostream> // defines cin and cout
using namespace std; 

bool isLeapYear(int);
// returns true iff y is a leap year;

int main()
{ // tests the isLeapYear() function:
  int n;
  
  do
  { cin >> n;
    if (isLeapYear(n)) 
      cout << n << " is a leap year.\n";
    else 
      cout << n << " is not a leap year.\n";
  }
  while (n > 1);

}

bool isLeapYear(int y)
{ // returns true iff y is a leap year:
  return y%4 == 0 && (y % 100 != 0 || y % 400 == 0);  //if y is divisible by 4, AND (y is not divisible by 100 OR y is divisible by 400)
}


/*
OUPUT: 
2000
2000 is a leap year.
2001
2001 is not a leap year.
0
0 is a leap year.
*/
