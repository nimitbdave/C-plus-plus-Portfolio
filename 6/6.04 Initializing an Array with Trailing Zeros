/* 
This program initializes the array a and then prints its values:
*/

#include <cctype> // defines the functions isdigit(), islower(), etc.
#include <cstdlib> // rand(), RAND_MAX const, exit()
#include <ctime> // defines the time() function
//#include <time.h> // use this if <ctime> is not recognized
#include <cfloat>
#include <iomanip> // defines setw()
#include <cmath> // defines pow() and log(), fabs(), sqrt()
#include <iostream> // defines cin and cout
using namespace std; 

int main()
{ float a[7] = { 22.2,44.4,66.6 };
  int size = sizeof(a)/sizeof(float);
  for (int i=0; i<size; i++)
    cout << "\ta[" << i << "] = " << a[i] << endl;
}

/*
OUPUT: 
a[0] = 22.2
a[1] = 44.4
a[2] = 66.6
a[3] = 0
a[4] = 0
a[5] = 0
a[6] = 0


Note that the number of values in an array’s initializer list cannot exceed its size:
  float a[3] = { 22.2, 44.4,66.6,88.8 }; // ERROR: too many values!
An array can be initialized to be all zeros by using an empty initializer list. So, for example,
the following three declarations are equivalent:
  float a[ ] = { 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  float a[9] = { 0, 0 };
  float a[9] = { 0, 0, 0, 0, 0, 0, 0, 0, 0 };
But note that this is not the same as using no initializer list. Just as with a variable of
fundamental type, if an array is not initialized it will contain “garbage” values.
*/
