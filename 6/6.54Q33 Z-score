/* 
I extend the program from Q31 so that it also computes and prints the Z-scores of the
input data. The Z-scores of the n numbers x0, …, xn–1 are defined by zi = (xi – )/s. They normalize
the given data so that they are centered about 0.0 and have standard deviation 1.0.
I use the function defined in Q32.

*/

#include <cctype> // defines the functions isdigit(), islower(), etc.
#include <cstdlib> // rand(), RAND_MAX const, exit()
#include <ctime> // defines the time() function
//#include <time.h> // use this if <ctime> is not recognized
#include <cfloat>
#include <iomanip> // defines setw()
#include <cmath> // defines pow() and log(), fabs(), sqrt()
#include <iostream> // defines cin and cout
using namespace std; 

int main()
{ double x[] = { 2.2, 3.3,4.4,5.5,6.6,7.7,8.8,9.9 };
  int n=8;
  print(x,n);
  double m = mean(x,n);
  double s = stdev(x,n);
  cout << "mean = " << m << ", std dev = " << s << endl;
  for (int i=0; i<n; i++)
    cout << "x[" << i << "] = " << x[i]
         << ", z[" << i << "] = " << (x[i] - m)/s << endl;
}

/*
OUPUT: 

*/
